@model BannerModel
@inject AdminAreaSettings adminAreaSettings
@using Nop.Core.Domain.Banners
@using Nop.Services
<div asp-validation-summary="All"></div>
<input asp-for="Id" type="hidden" />

<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default">
                <div class="panel panel-body">
                    <div class="form-group advanced-setting">
                        <div class="col-md-3">
                            <nop-label asp-for="PictureId" />
                        </div>
                        <div class="col-md-9">
                            <nop-editor asp-for="PictureId" />
                            <span asp-validation-for="PictureId"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            <nop-label asp-for="Title" />
                        </div>
                        <div class="col-md-9">
                            <nop-editor asp-for="Title" />
                            <span asp-validation-for="Title"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            <nop-label asp-for="Caption" />
                        </div>
                        <div class="col-md-9">
                            @if (adminAreaSettings.UseRichEditorInMessageTemplates)
                            {
                                //we use rich editor with BODY tag supported
                                //it could be a better practice to implement one more editor (similar to RichEditor.cshtml)
                                //with "enableFullPage" property set to "true". but we do not want to duplicate source code
                                //that's why we use this workaround
                                //we store a value into "ViewData" and then use it in the RichEditor.cshtml file
                                ViewData["nop.RichEditor.EnableFullPage"] = true;
                                <div class="input-group input-group-required">
                                    <nop-editor asp-for="Caption" asp-template="RichEditor" />
                                    <div class="input-group-btn">
                                        <nop-required />
                                    </div>
                                </div>
                            }
                            else
                            {
                                <nop-textarea asp-for="Caption"></nop-textarea>
                                <text>
                                    <script>
                                        $(document).ready(function () {
                                            $('#@Html.IdFor(model => model.Caption)').height($('#@Html.IdFor(model => model.Caption)')[0].scrollHeight);
                                        });
                                    </script>
                                </text>
                            }
                            <span asp-validation-for="Caption"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            <nop-label asp-for="ShowCaption" />
                        </div>
                        <div class="col-md-9">
                            <nop-editor asp-for="ShowCaption" />
                            <span asp-validation-for="ShowCaption"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            <nop-label asp-for="Url" />
                        </div>
                        <div class="col-md-9">
                            <nop-editor asp-for="Url" />
                            <span asp-validation-for="Url"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            <nop-label asp-for="DisplayOrder" />
                        </div>
                        <div class="col-md-9">
                            <nop-editor asp-for="DisplayOrder" />
                            <span asp-validation-for="DisplayOrder"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            <nop-label asp-for="Type" />
                        </div>
                        <div class="col-md-9">
                            <nop-select asp-for="Type" asp-items="@(((BannerType)Model.Type).ToSelectList())" />
                            <span asp-validation-for="Type"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            <nop-label asp-for="Published" />
                        </div>
                        <div class="col-md-9">
                            <nop-editor asp-for="Published" />
                            <span asp-validation-for="Published"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            <nop-label asp-for="SelectedStoreIds" />
                        </div>
                        <div class="col-md-9">
                            <div class="row">
                                <div class="col-md-4">
                                    <nop-select asp-for="SelectedStoreIds" asp-items="Model.AvailableStores" asp-multiple="true" />
                                    <script>
                     $(document).ready(function() {
                         var storesIdsInput = $('#@Html.IdFor(model => model.SelectedStoreIds)').data("kendoMultiSelect");
			                storesIdsInput.setOptions({
			                    autoClose: false,
			                    filter: "contains"
			                });

			                @if (Model.AvailableStores.Count == 0)
			                {
			                    <text>
                                 storesIdsInput.setOptions({
                                     enable: false,
                                     placeholder: 'No stores available'
                                 });
                                 storesIdsInput._placeholder();
                                 storesIdsInput._enable();
                             </text>
			                }
                     });
                                    </script>
                                </div>
                                <div class="col-md-8">
                                    @await Component.InvokeAsync("MultistoreDisabledWarning")
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>