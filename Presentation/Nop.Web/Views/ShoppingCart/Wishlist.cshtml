@using Nop.Core.Domain.Common
@inject CommonSettings commonSettings
@model WishlistModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@inject IWebHelper webHelper
@inject IWorkContext workContext
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Wishlist").Text);
    //page class
    Html.AppendPageCssClassParts("html-wishlist-page");
    var breadcrumbDelimiter = commonSettings.BreadcrumbDelimiter;

}
<div class="breadcrumb">
    <div class="container">
        <ul itemscope itemtype="http://schema.org/BreadcrumbList">
            <li>
                <a href="@Url.RouteUrl("Homepage")" title="@T("Categories.Breadcrumb.Top")">@T("Categories.Breadcrumb.Top")</a>
                <span class="delimiter">@breadcrumbDelimiter</span>
            </li>
            <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
                <strong class="current-item" itemprop="name">@T("Wishlist")</strong>
                <span itemprop="item" itemscope itemtype="http://schema.org/Thing"
                      id="@(Url.RouteUrl("ShoppingCart"))">
                </span>
            </li>
        </ul>
    </div>
</div>
<div class="page wishlist-page">
    <div class="container">
        <div class="page-title">
            <h1>
                @if (Model.IsEditable)
                {
                    @T("Wishlist")
                }
                else
                {
                    @string.Format(T("Wishlist.WishlistOf").Text, Model.CustomerFullname)
                }
            </h1>
        </div>
        <div class="page-body">
            @if (Model.Items.Count > 0)
            {
                <div class="wishlist-content">
                    @if (Model.Warnings.Count > 0)
                    {
                        <div class="message-error">
                            <ul>
                                @foreach (var warning in Model.Warnings)
                                {
                                    <li>@warning</li>
                                }
                            </ul>
                        </div>
                    }
                    <form asp-route="Wishlist" method="post">
                        @foreach (var item in Model.Items)
                        {
                            <div class="cart-item border bg-white py-2 mb-3 rounded">
                                <div class="row align-items-center">
                                    <div class="col-2 col-md-1 pr-0">
                                        <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })"><img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" /></a>
                                    </div>
                                    <div class="col-6 col-md-4">
                                        <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })" class="product-name">@item.ProductName</a>
                                        <div>
                                            <span class="product-unit-price">@item.UnitPrice</span>
                                        </div>
                                        @if (!string.IsNullOrEmpty(item.AttributeInfo))
                                        {
                                            <div class="attributes">
                                                @Html.Raw(item.AttributeInfo)
                                            </div>
                                        }
                                        <div class="d-none">
                                            <label class="td-title" for="removefromcart@(item.Id)">Remove:</label> <input type="checkbox" name="removefromcart" id="removefromcart@(item.Id)" value="@(item.Id)">
                                        </div>
                                        <div>
                                            <a href="javascript:" onclick="deleteCartItem('@item.Id')">@T("Remove")</a>
                                        </div>
                                        @if (Model.IsEditable && item.AllowItemEditing)
                                        {
                                            var editCartItemUrl = Url.RouteUrl("Product", new { SeName = item.ProductSeName }, webHelper.CurrentRequestProtocol);
                                            editCartItemUrl = webHelper.ModifyQueryString(editCartItemUrl, "updatecartitemid", item.Id.ToString());
                                            <div class="edit-item">
                                                <a href="@editCartItemUrl">@T("Common.Edit")</a>
                                            </div>
                                        }
                                        @if (item.Warnings.Count > 0)
                                        {
                                            <div class="message-error">
                                                <ul>
                                                    @foreach (var warning in item.Warnings)
                                                    {
                                                        <li>@warning</li>
                                                    }
                                                </ul>
                                            </div>
                                        }
                                        <div class="d-md-none mt-2">
                                            <a href="javascript:" class="btn btn-primary btn-main" onclick="addToCartWishList('@item.Id')">@T("ShoppingCart.AddToCartSort")</a>
                                        </div>
                                    </div>

                                    <div class="col-4 col-md-2 text-center">
                                        @if (Model.IsEditable)
                                        {
                                            if (item.AllowedQuantities.Count > 0)
                                            {
                                                <select name="itemquantity@(item.Id)" id="itemquantity@(item.Id)" class="qty-dropdown">
                                                    @foreach (var qty in item.AllowedQuantities)
                                                    {
                                                        <option selected="@qty.Selected" value="@qty.Value">@qty.Value</option>
                                                    }
                                                </select>
                                            }
                                            else
                                            {
                                                <div class="field">
                                                    <div class="control">
                                                        <div class="custom-qty reduced"><button type="button" class="btn-qty minus"><span class="mbi mbi-minus"></span></button></div>
                                                        <input name="itemquantity@(item.Id)" id="itemquantity@(item.Id)" class="rounded input-text qty" type="text" value="@(item.Quantity)" />

                                                        <div class="custom-qty increase"><button type="button" class="btn-qty plus"><span class="mbi mbi-plus"></span></button></div>
                                                    </div>
                                                </div>

                                            }
                                        }
                                        else
                                        {
                                            <span class="product-quantity">@item.Quantity</span>
                                        }
                                    </div>
                                    <div class="d-none">
                                        <label class="td-title">@T("ShoppingCart.AddToCart"):</label>
                                        <input type="checkbox" name="addtocart" id="addToCartWishList@(item.Id)" value="@(item.Id)" />
                                    </div>
                                    <div class="col-md-3 d-none d-md-block text-center">
                                        <a href="javascript:" class="btn btn-primary btn-main" onclick="addToCartWishList('@item.Id')">@T("ShoppingCart.AddToCart")</a>
                                    </div>
                                    <div class="col-3 col-md-2 d-none d-md-block">
                                        <strong class="product-subtotal">@item.SubTotal</strong>
                                        @if (!string.IsNullOrEmpty(item.Discount))
                                        {
                                            <div class="discount">
                                                - @item.Discount
                                            </div>
                                            if (item.MaximumDiscountedQty.HasValue)
                                            {
                                                <div class="discount-additional-info">
                                                    @T("ShoppingCart.MaximumDiscountedQty", item.MaximumDiscountedQty.Value)
                                                </div>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                        @if (Model.Items.Count > 0 && Model.DisplayTaxShippingInfo)
                        {
                            var inclTax = workContext.TaxDisplayType == TaxDisplayType.IncludingTax;
                            //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                            //of course, you can modify appropriate locales to include VAT info there
                            <div class="tax-shipping-info">
                                @T(inclTax ? "Wishlist.TaxShipping.InclTax" : "Wishlist.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                            </div>
                        }
                        <div class="buttons d-none">
                            @if (Model.IsEditable)
                            {
                                <input type="submit" name="updatecart" value="@T("Wishlist.UpdateCart")" class="button-2 update-wishlist-button" />
                            }
                            @if (Model.DisplayAddToCart)
                            {
                                <input type="submit" name="addtocartbutton" value="@T("ShoppingCart.AddToCart")" class="button-2 wishlist-add-to-cart-button" />
                            }
                        </div>
                    </form>
                </div>
            }
            else
            {
                <div class="no-data">
                    @T("Wishlist.CartIsEmpty")
                </div>
            }
        </div>
    </div>
</div>
<script asp-location="Footer">

    $(document).ready(function () {
        var newVal, defaultValue = $('.input-text.qty').val(), increment = 1;
        $(".btn-qty").click(function (event) {
            var $button = $(this),
                oldValue = $button.closest('.control').find(".input-text.qty").val();

            if (!oldValue || oldValue < increment) {
                oldValue = 0;
            }

            if ($button.hasClass('plus')) {
                newVal = parseFloat(oldValue) + increment;
            } else {
                if (oldValue >= defaultValue && parseFloat(oldValue) - increment >= 0) {
                    newVal = parseFloat(oldValue) - increment;
                } else {
                    newVal = defaultValue;
                }
            }
            $button.closest('.control').find(".input-text.qty").val(newVal);
            $('input[name=updatecart]').click();
        });
    })
</script>