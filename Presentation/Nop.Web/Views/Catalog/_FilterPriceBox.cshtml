@model CatalogPagingFilteringModel.PriceRangeFilterModel
@functions{

    public string FormatPriceRangeText(CatalogPagingFilteringModel.PriceRangeFilterItem filterItem)
    {
        var rangeText = "";
        if (string.IsNullOrWhiteSpace(filterItem.From))
        {
            rangeText = string.Format(T("Filtering.PriceRangeFilter.Under").Text, $"<span class=\"PriceRange\">{filterItem.To}</span>");
        }
        else if (string.IsNullOrWhiteSpace(filterItem.To))
        {
            rangeText = string.Format(T("Filtering.PriceRangeFilter.Over").Text, $"<span class=\"PriceRange\">{filterItem.From}</span>");
        }
        else
        {
            rangeText = $"<span class=\"PriceRange\">{filterItem.From}</span> - <span class=\"PriceRange\">{filterItem.To}</span>";
        }
        return rangeText;
    }
}
@if (Model.Enabled)
{
    <div class="product-filter price-range-filter">
        <div class="filter-title">
            <strong>@T("Filtering.PriceRangeFilter")</strong>
        </div>
        <div class="filter-content">
             <div class="available-items">
                    <ul class="group price-range-group">
                        @foreach (var item in Model.Items)
                        {
                            <li><a class="@(item.Selected?"selected":string.Empty)"  href="@item.FilterUrl"> @Html.Raw(FormatPriceRangeText(item))</a></li>
                        }
                    </ul>
                </div>
        </div>

    </div>
}
