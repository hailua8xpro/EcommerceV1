@model ProductOverviewModel
@using Nop.Core
@using Nop.Core.Domain.Catalog
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax
@inject CatalogSettings catalogSettings
@inject IWorkContext workContext
@{
    //prepare "Add to cart" AJAX link
    var addtocartlink = "";
    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var quantity = 1;
    if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
    }
    else
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity });
    }

    var addtowishlistlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist, quantity = quantity });
    var addtocomparelink = Url.RouteUrl("AddProductToCompare", new { productId = Model.Id });
}
<div class="product-item" data-productid="@Model.Id">
    <div class="product-show">
        <div class="picture">
            <a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" title="@Model.DefaultPictureModel.Title">
                <img class="lazy" alt="@Model.DefaultPictureModel.AlternateText" data-src="@Model.DefaultPictureModel.ImageUrl" title="@Model.DefaultPictureModel.Title" />
            </a>
        </div>
        <div class="product-btn">
            <div class="row no-gutters text-center">
                @if (!Model.ProductPrice.DisableBuyButton)
                {
                    var addToCartText = T("ShoppingCart.AddToCart").Text;
                    if (Model.ProductPrice.IsRental)
                    {
                        addToCartText = T("ShoppingCart.Rent").Text;
                    }
                    if (Model.ProductPrice.AvailableForPreOrder)
                    {
                        addToCartText = T("ShoppingCart.PreOrder").Text;
                    }
                    <div class="col">
                        <a href="javascript:" title="@addToCartText" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink',this);return false;">
                            <span class="mbi mbi-bag2"></span>
                        </a>
                    </div>
                }

                <div class="col d-none d-md-block">
                    <a href="javascript:" onclick="showQuickViewProduct('@Url.RouteUrl("QuickViewProduct", new {productId= Model.Id})')" title="@T("ProductItem.QuickView")" data-toggle="tooltip" data-placement="top">
                        <span class="mbi mbi-eye"></span>
                    </a>
                </div>
                @if (!Model.ProductPrice.DisableWishlistButton)
                {
                    <div class="col">
                        <a title="@T("ShoppingCart.AddToWishlist")" href="javascript:" onclick="AjaxCart.addproducttocart_catalog('@addtowishlistlink');return false;">
                            <span class="mbi mbi-heart"></span>
                        </a>
                    </div>
                }

                @if (!Model.ProductPrice.DisableAddToCompareListButton)
                {
                    <div class="col">
                        <a title="@T("ShoppingCart.AddToCompareList")" href="javascript:" onclick="AjaxCart.addproducttocomparelist('@addtocomparelink');return false;">
                            <span class="mbi mbi-chart-bars"></span>
                        </a>
                    </div>
                }

            </div>
        </div>
        @if (Model.ProductPrice.DifferencePricePercent>0)
        {
            <span class="discount-percent">-@Model.ProductPrice.DifferencePricePercent%</span>
        }
    </div>
    
    <div class="details">
        <h2 class="product-title">
            <a href="@Url.RouteUrl("Product", new {SeName = Model.SeName})">@Model.Name</a>
        </h2>
        @if (Model.ReviewOverviewModel.AllowCustomerReviews)
        {
            var ratingPercent = 0;
            if (Model.ReviewOverviewModel.TotalReviews != 0)
            {
                ratingPercent = ((Model.ReviewOverviewModel.RatingSum*100)/Model.ReviewOverviewModel.TotalReviews)/5;
            }
            <div class="product-rating-box" title="@string.Format(T("Reviews.TotalReviews").Text, Model.ReviewOverviewModel.TotalReviews)">
                    <div class="rating">
                        <span style="width: @(ratingPercent)%">
                        </span>
                    </div>
            </div>
        }
        <div class="add-info">
            <div class="prices">
                <span class="price @(!string.IsNullOrEmpty(Model.ProductPrice.OldPrice)?"actual-price":"normal-price") ">@Model.ProductPrice.Price</span>
                @if (!string.IsNullOrEmpty(Model.ProductPrice.OldPrice))
                {
                    <span class="price old-price">@Model.ProductPrice.OldPrice</span>
                }
                @if (Model.ProductPrice.DisplayTaxShippingInfo)
                {
                    var inclTax = workContext.TaxDisplayType == TaxDisplayType.IncludingTax;
                    //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                    //of course, you can modify appropriate locales to include VAT info there
                    <span class="tax-shipping-info">
                        @T(inclTax ? "Products.Price.TaxShipping.InclTax" : "Products.Price.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                    </span>
                }
                @if (!string.IsNullOrEmpty(Model.ProductPrice.BasePricePAngV))
                {
                    <div class="base-price-pangv">
                        @Model.ProductPrice.BasePricePAngV
                    </div>
                }
            </div>
           
        </div>
    </div>
</div>
