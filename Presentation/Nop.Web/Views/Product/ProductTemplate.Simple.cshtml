@model ProductDetailsModel
@using Nop.Core.Domain.Seo;
@inject Nop.Core.IWebHelper webHelper
@inject SeoSettings seoSettings
@{
    Layout = "_ColumnsOne";
    Html.AppendCssFileParts("~/lib/slick/slick-theme.css");
    Html.AppendCssFileParts("~/lib/slick/slick.css");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib/slick/slick.js");
    //title
    Html.AddTitleParts(!string.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    //meta
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);
    //page class
    Html.AppendPageCssClassParts("html-product-details-page");

    //canonical URL
    if (seoSettings.CanonicalUrlsEnabled)
    {
        var productUrl = Url.RouteUrl("Product", new { SeName = Model.SeName }, webHelper.CurrentRequestProtocol).ToLowerInvariant();
        Html.AddCanonicalUrlParts(productUrl, seoSettings.QueryStringInCanonicalUrlsEnabled);
    }

    //open graph META tags
    if (seoSettings.OpenGraphMetaTags)
    {
        Html.AddHeadCustomParts("<meta property=\"og:type\" content=\"product\" />");
        Html.AddHeadCustomParts("<meta property=\"og:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:description\" content=\"" + Html.Encode(Nop.Core.Html.HtmlHelper.StripTags(Model.MetaDescription)) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:image:url\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:url\" content=\"" + webHelper.GetThisPageUrl(false) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:site_name\" content=\"" + Html.Encode(Model.CurrentStoreName) + "\" />");
    }

    //Twitter META tags
    if (seoSettings.TwitterMetaTags)
    {
        Html.AddHeadCustomParts("<meta property=\"twitter:card\" content=\"summary\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:site\" content=\"" + Html.Encode(Model.CurrentStoreName) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:description\" content=\"" + Html.Encode(Nop.Core.Html.HtmlHelper.StripTags(Model.MetaDescription)) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:url\" content=\"" + webHelper.GetThisPageUrl(false) + "\" />");
    }
}
<!--product breadcrumb-->
@section Breadcrumb
{
    @await Html.PartialAsync("_ProductBreadcrumb", Model.Breadcrumb)
}
<div class="page product-details-page">
    <div class="container">
        <div class="page-body">
            <form asp-route="Product" asp-route-sename="@Model.SeName" method="post" id="product-details-form">
                <div itemscope itemtype="http://schema.org/Product" data-productid="@Model.Id">
                    <div class="product-essential">
                        <div class="product-header row mb-3">
                            <div class="col-md-8">
                                <div class="page-title">
                                    <h1 itemprop="name">
                                        @Model.Name
                                    </h1>
                                </div>
                                @await Html.PartialAsync("_ProductReviewOverview", Model.ProductReviewOverview)
                                @await Html.PartialAsync("_SKU_Man_GTIN_Ven", Model)
                            </div>
                            <div class="col-md-4 text-md-right">
                                @await Html.PartialAsync("_ShareButton", Model)
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                @await Html.PartialAsync("_ProductDetailsPictures", Model)
                            </div>
                            <div class="col-md-6">
                                @{
                                    var dataDictPrice = new ViewDataDictionary(ViewData);
                                    dataDictPrice.TemplateInfo.HtmlFieldPrefix = $"price_{Model.Id}";
                                    @await Html.PartialAsync("_ProductPrice", Model.ProductPrice, dataDictPrice)
                                    @await Html.PartialAsync("_ProductTierPrices", Model.TierPrices)
                                }
                                @await Html.PartialAsync("_Discontinued", Model)

                                @if (!string.IsNullOrEmpty(Model.ShortDescription))
                                {
                                    <div class="short-description my-3">
                                        @Html.Raw(Model.ShortDescription)
                                    </div>
                                }
                                <!--product reviews-->
                                <!--manufacturers-->
                                @await Html.PartialAsync("_ProductManufacturers", Model.ProductManufacturers)
                                <!--availability-->
                                @await Html.PartialAsync("_Availability", Model)
                                <!--SKU, MAN, GTIN, vendor-->
                                <!--delivery-->
                                @await Html.PartialAsync("_DeliveryInfo", Model)
                                <!--sample download-->
                                @await Html.PartialAsync("_DownloadSample", Model)
                                <!--attributes-->
                                @{
                                    var dataDictAttributes = new ViewDataDictionary(ViewData);
                                    dataDictAttributes.TemplateInfo.HtmlFieldPrefix = $"attributes_{Model.Id}";
                                    @await Html.PartialAsync("_ProductAttributes", Model.ProductAttributes, dataDictAttributes)
                                }
                                <!--gift card-->
                                @{
                                    var dataDictGiftCard = new ViewDataDictionary(ViewData);
                                    dataDictGiftCard.TemplateInfo.HtmlFieldPrefix = $"giftcard_{Model.Id}";
                                    @await Html.PartialAsync("_GiftCardInfo", Model.GiftCard, dataDictGiftCard)
                                }
                                <!--rental info-->
                                @{
                                    var dataDictRental = new ViewDataDictionary(ViewData);
                                    dataDictRental.TemplateInfo.HtmlFieldPrefix = $"rental_{Model.Id}";
                                    @await Html.PartialAsync("_RentalInfo", Model, dataDictRental)
                                }
                                <div class="clearfix py-3 border-top border-bottom">
                                    <!--price & add to cart-->
                                    @{

                                        var dataDictAddToCart = new ViewDataDictionary(ViewData);
                                        dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = $"addtocart_{Model.Id}";
                                        @await Html.PartialAsync("_AddToCart", Model.AddToCart, dataDictAddToCart)
                                    }
                                    <div class="overview-buttons">
                                        @{
                                            var dataDictAddToWishlist = new ViewDataDictionary(ViewData);
                                            dataDictAddToWishlist.TemplateInfo.HtmlFieldPrefix = $"addtocart_{Model.Id}";
                                            @await Html.PartialAsync("_AddToWishlist", Model.AddToCart, dataDictAddToWishlist)
                                        }
                                        @await Html.PartialAsync("_CompareProductsButton", Model)
                                    </div>
                                </div>
                                @await Html.PartialAsync("_ProductTags", Model.ProductTags)
                            </div>
                        </div>
                        <ul class="nav nav-tabs productdetail-tab" id="productdetailtab" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">Thông tin sản phẩm</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="specification-tab" data-toggle="tab" href="#specification" role="tab" aria-controls="specification" aria-selected="false">Đặc tính sản phẩm</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="review-tab" data-toggle="tab" href="#review" role="tab" aria-controls="review" aria-selected="false">Đánh giá</a>
                            </li>
                        </ul>
                        <div class="tab-content" id="productdetailtabContent">
                            <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
                                @if (!string.IsNullOrEmpty(Model.FullDescription))
                                {
                                    <div class="full-description mt-3" itemprop="description">
                                        @Html.Raw(Model.FullDescription)
                                    </div>
                                }
                            </div>
                            <div class="tab-pane fade" id="specification" role="tabpanel" aria-labelledby="profile-tab">
                                <div class="product-collateral mt-3">
                                    @await Html.PartialAsync("_ProductSpecifications", Model.ProductSpecifications)
                                </div>
                            </div>
                            <div class="tab-pane fade" id="review" role="tabpanel" aria-labelledby="review-tab">...</div>
                        </div>
                        
                    </div>
                    
                    @await Component.InvokeAsync("ProductsAlsoPurchased", new { productId = Model.Id })
                    @await Component.InvokeAsync("RelatedProducts", new { productId = Model.Id })
                </div>
            </form>
        </div>
    </div>
</div>
<script type="application/ld+json" asp-location="Head">
    {
    "@@context": "https://schema.org/",
    "@@type": "Product",
    "name": "@Model.Name",
    "image": ["@Model.DefaultPictureModel.ImageUrl"],
    "description": "@Model.ShortDescription",
    "offers": {
    "@@type": "Offer",
    "url": "@webHelper.GetThisPageUrl(false)",
    "priceCurrency": "VND",
    "price": "@Model.ProductPrice.PriceValue",
    "itemCondition": "https://schema.org/UsedCondition",
    "availability": "https://schema.org/InStock",
    "seller": {
    "@@type": "Organization",
    "name": "Executive Objects"
    }
    }
    }
</script>