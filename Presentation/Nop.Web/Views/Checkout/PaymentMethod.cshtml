@using Nop.Core.Domain.Common
@inject CommonSettings commonSettings
@model CheckoutPaymentMethodModel
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Checkout").Text);
    //page class
    Html.AppendPageCssClassParts("html-checkout-page");
    Html.AppendPageCssClassParts("html-payment-method-page");
    var breadcrumbDelimiter = commonSettings.BreadcrumbDelimiter;

}
<div class="breadcrumb">
    <div class="container">
        <ul itemscope itemtype="http://schema.org/BreadcrumbList">
            <li>
                <a href="@Url.RouteUrl("Homepage")" title="@T("Categories.Breadcrumb.Top")">@T("Categories.Breadcrumb.Top")</a>
                <span class="delimiter">@breadcrumbDelimiter</span>
            </li>
            <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
                <strong class="current-item" itemprop="name">@T("Checkout.SelectPaymentMethod")</strong>
                <span itemprop="item" itemscope itemtype="http://schema.org/Thing"
                      id="@(Url.RouteUrl("ShoppingCart"))">
                </span>
            </li>
        </ul>
    </div>
</div>
<div class="page checkout-page payment-method-page py-3">
    <div class="container">
        <div class="page-body checkout-data">
            <div class="row">
                <div class="col-md-7">
                    <div class="section payment-method">
                        <form asp-route="CheckoutPaymentMethod" method="post">
                            @if (Model.DisplayRewardPoints && Model.PaymentMethods.Count > 0)
                            {
                                <div class="use-reward-points">
                                    <input asp-for="UseRewardPoints" />
                                    <label asp-for="UseRewardPoints">@string.Format(T("Checkout.UseRewardPoints").Text, Model.RewardPointsBalance, Model.RewardPointsAmount)</label>
                                    @if (Model.RewardPointsEnoughToPayForOrder)
                                    {
                                        <script asp-location="Footer">
                                $(document).ready(function() {
                                    $("#@Html.IdFor(model => model.UseRewardPoints)")
                                        .on('change', toggleUseRewardPoints);
                                    toggleUseRewardPoints();
                                });

                                function toggleUseRewardPoints() {
                                    if ($('#@Html.IdFor(model => model.UseRewardPoints)').is(':checked')) {
                                        $('#payment-method-block').hide();
                                    } else {
                                        $('#payment-method-block').show();
                                    }
                                }
                                        </script>
                                    }
                                </div>
                            }
                            @if (Model.PaymentMethods.Count > 0)
                            {
                                <ul class="method-list" id="payment-method-block">
                                    @for (var i = 0; i < Model.PaymentMethods.Count; i++)
                                    {
                                        var paymentMethod = Model.PaymentMethods[i];
                                        var paymentMethodName = paymentMethod.Name;
                                        if (!string.IsNullOrEmpty(paymentMethod.Fee))
                                        {
                                            paymentMethodName = T("Checkout.SelectPaymentMethod.MethodAndFee", paymentMethodName, paymentMethod.Fee).Text;
                                        }
                                        <li>
                                            <div class="custom-control custom-radio">
                                                <input type="radio" id="paymentmethod_@(i)" name="paymentmethod" value="@(paymentMethod.PaymentMethodSystemName)" class="custom-control-input" checked="@paymentMethod.Selected">
                                                <label class="custom-control-label" for="paymentmethod_@(i)">@paymentMethodName</label>
                                            </div>
                                        </li>
                                    }
                                </ul>
                                <div class="buttons my-3">
                                    <input type="submit" name="nextstep" value="@T("Checkout.NextButton")" class="btn btn-primary btn-main payment-method-next-step-button" />
                                </div>
                            }
                            else
                            {
                                <div class="message-error">
                                    @T("Checkout.NoPaymentMethods")
                                </div>
                            }
                        </form>
                        <a href="@Url.RouteUrl("CheckoutBillingAddress")"><span class="mbi mbi-arrow-left"></span> Trở lại trang thông tin đặt hàng</a>
                    </div>

                </div>
                <div class="col-md-5">
                    <div class="section order-summary">
                        @await Component.InvokeAsync("OrderSummary", new { viewName = "OrderSummaryCheckout" })
                       
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>