@model LoginModel
@using Nop.Core
@using Nop.Core.Domain.Customers

@inject IWebHelper webHelper
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Login").Text);
    //page class
    Html.AppendPageCssClassParts("html-login-page");

    //register URL with return URL (if specified)
    var registerUrl = Url.RouteUrl("Register", new { returnUrl = this.Context.Request.Query["returnUrl"] }, webHelper.CurrentRequestProtocol);
}
<div class="page login-page pb-4">
    <div class="container">
        <div class="page-title text-center my-4">
            <h1>@T("Account.Login.Welcome")</h1>
        </div>
        @await Html.PartialAsync("_ExternalAuthentication.Errors")
        <div class="page-body">
            <div class="customer-blocks row">
                <div class="col-md-6">
                    <div class="cl bg-gray">
                        @if (Model.RegistrationType == UserRegistrationType.Disabled)
                        {
                            <div class="new-wrapper">
                                <div class="title">
                                    @T("Account.Register")
                                </div>
                                <div class="text">
                                    @T("Account.Register.Result.Disabled")
                                </div>
                            </div>
                        }
                        else if (Model.CheckoutAsGuest)
                        {
                            <div class="new-wrapper checkout-as-guest-or-register-block">
                                <div class="title">
                                    <strong>@T("Account.Login.CheckoutAsGuestOrRegister")</strong>
                                </div>
                                <div class="text">
                                    @await Component.InvokeAsync("TopicBlock", new { systemName = "CheckoutAsGuestOrRegister" })
                                </div>
                                <div class="buttons">
                                    <input type="button" class="btn btn-primary btn-main checkout-as-guest-button" onclick="location.href='@Url.RouteUrl("Checkout")'" value="@T("Account.Login.CheckoutAsGuest")" />
                                    <input type="button" class="btn btn-primary btn-main register-button" onclick="location.href='@registerUrl'" value="@T("Account.Register")" />
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="new-wrapper register-block">
                                <div class="title">
                                    <strong>@T("Account.Login.NewCustomer")</strong>
                                </div>
                                <div class="text my-3">
                                    @T("Account.Login.NewCustomerText")
                                </div>
                                <div class="buttons">
                                    <input type="button" class="btn btn-primary btn-main register-button" onclick="location.href='@registerUrl'" value="@T("Account.Register")" />
                                </div>
                            </div>
                        }
                                    </div>
                </div>
                <div class="returning-wrapper col-md-6">
                    <div class="cl bg-gray">
                        <form asp-route="Login" asp-route-returnurl="@Context.Request.Query["ReturnUrl"]" method="post">
                            <div asp-validation-summary="ModelOnly" class="message-error">@T("Account.Login.Unsuccessful")</div>
                            <div class="title">
                                <strong>@T("Account.Login.ReturningCustomer")</strong>
                            </div>
                            <div class="form-fields">
                                @if (Model.UsernamesEnabled)
                                {
                                    <div class="inputs row">
                                        <div class="col-md-3"><label asp-for="Username" asp-postfix=":"></label></div>
                                        <div class="col-md-9">
                                            <input asp-for="Username" class="username" autofocus="autofocus" />
                                            <span asp-validation-for="Username"></span>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="inputs row mb-3">
                                        <div class="col-md-3"><label asp-for="Email" asp-postfix=":"></label></div>
                                        <div class="col-md-9">
                                            <input asp-for="Email" class="email form-control" autofocus="autofocus" />
                                            <span asp-validation-for="Email"></span>
                                        </div>
                                    </div>
                                }
                                <div class="inputs row mb-3">
                                    <div class="col-md-3"><label asp-for="Password" asp-postfix=":"></label></div>
                                    <div class="col-md-9">
                                        <input asp-for="Password" class="form-control password" />
                                        <span asp-validation-for="Password"></span>
                                    </div>
                                </div>
                                <div class="inputs row mb-3">
                                    <div class="col-md-9 offset-md-3">
                                        <input asp-for="RememberMe" />
                                        <label asp-for="RememberMe"></label>
                                        <span class="forgot-password">
                                            <a asp-route="PasswordRecovery">@T("Account.Login.ForgotPassword")</a>
                                        </span>
                                    </div>
                                </div>
                                @if (Model.DisplayCaptcha)
                                {
                                    <div class="captcha-box">
                                        <nop-captcha />
                                    </div>
                                }
                            </div>
                            <div class="row">
                                <div class="col-md-9 offset-md-3">
                                    <input class="btn btn-primary btn-main login-button" type="submit" value="@T("Account.Login.LoginButton")" />
                                </div>
                            </div>

                        </form>
                        @*<div class="external-authentication">
            @await Component.InvokeAsync("ExternalMethods", "ExternalAuthentication")
        </div>*@
                    </div>
                </div>
            </div>
           
        </div>
    </div>
</div>
